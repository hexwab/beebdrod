#!/usr/bin/perl -w
undef $/;
use constant CATLO=>0x130;
use constant CATHI=>0x198;
my @files=qw[
    titlecode.exo
    titlecode_elk.exo
    title.exo
    heads.exo
    headsptrs.exo
    tiles.exo
    intro.exo
    intro1-9
    intro10-17
    intro18-25
    font_body.exo
    font_headline.exo
    story.exo
    code_elk.exo
    code_bbcb.exo
    code_beeb.exo
    code_master.exo
    map_overlay.exo
    level01 level02 level03 level04 level05
    level06 level07 level08 level09 level10
    level11 level12 level13 level14 level15
    level16 level17 level18 level19 level20
    level21 level22 level23 level24 level25

    ];
#electron.exo
#    game_beeb.exo
#    game_b+.exo
    #title
    #game_beeb
    #game_master
    # save1 save2 save3 save4

my $nfiles=scalar @files;

if (@ARGV && shift=~/^-f/) {
    print "; autogenerated by makedisc.pl\n";
    for my $i (0..$nfiles-1) {
	printf "FILE_%s = %d\n", ($files[$i]=~s/[\.-]/_/rg), $i+1;
    }
    exit;
}

my @lengths = map { (stat($_))[7] or die "$!: $_"} @files;

unshift @files, '';
my $disc=<>;
$disc=~s/\0*$//;
my $off=length($disc);
unshift @lengths,$off;

my $cat = pack"v*",@lengths;

use List::MoreUtils qw(part);
{my $i=0;$cat=join"",map {@$_} part {$i++%2} split//,$cat;}

substr($disc,CATLO,$nfiles+1,substr($cat,0,$nfiles+1));
substr($disc,CATHI,$nfiles+1,substr($cat,$nfiles+1));
print STDERR "Index\tOffset\tLength\tName\n";
for my $i (1..$nfiles) {
    printf STDERR "%d\t%-5x\t%-5x\t%s\n", $i, $off, $lengths[$i], $files[$i];
    $off+=$lengths[$i];
}

my @data = map { if ($_) { open my $f,"<",$_ or die;<$f> } } @files;
my $data = join"",@data;

#$disc=$disc.("\0"x (0xa00-length($disc))) if length$disc<0xa00;
#die length($disc) if length($disc) !=0xa00;
$disc.=$data;

$disc.="\0" while length($disc) % 256; # pad to sector boundary

print $disc;
exit;
__END__
my @data = map { open my $f,"<",$_ or die;<$f> } @files;
my $data = join"",@data;

substr($disc,

# sub pack_fn {
#     my $fn=shift;
#     my $dir=shift || '$';
#     pack"A7C",$fn,$dir;
# }

# my $title="DROD";
    
# my $datafile="data";
# my $bootcode="boot";
# my $bootload=0xff1900;
# my $bootexec=0xff1900;
#my $sec0 = pack"A8", substr($title,0,8), '!BOOT  $', $datafile;
#my $sec1 = pack"A4CCCC", substr($title,8,4), 0, 
#$sec0.="\x00"x(256-length($sec0));
#$sec1.="\x00"x(256-length($sec0));
